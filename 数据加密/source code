package lorrey;

//<数据加密><加密程序亦是解密程序>
public class test4 {
    public static void main(String[] args) {
        System.out.println(encrypt(1982));
    }

    public static String encrypt(int number){
        //number = 1982
        //1.把这个密码拆分成一个一个的数字,才可以对其进行加密
        int[] numbers = split(number);
        //numbers = [1,9,8,2]

        //2.遍历这个数组中的每个数字,对其进行加密处理
        for (int i = 0; i < numbers.length; i++) {
            numbers[i] = (numbers[i] + 5) % 10;
        }

        //3.对数组反转,把对数组进行反转的操作交给一个独立的方法来完成
        reverse(numbers);

        //4.把这些加密的数字拼接起来作为加密后的结果返回即可
        String data = "";
        for (int i = 0; i < numbers.length; i++) {
            data += numbers[i];
        }
        return data;
    }

    public static void reverse(int[] numbers) {
        //反转数组的
        // numbers = [6,4,3,8]
        //            i     j
        for (int i = 0,j = 0; i < j; i++,j--) {
            //交换i和j位置处的值
            int tmp;
            tmp = numbers[i];
            numbers[i] = numbers[j];
            numbers[j] = numbers[i];
        }
    }

    public static int[] split(int number) {
        //number = 1982
        int[] numbers = new int[4];

        numbers[0] = number/1000;
        numbers[1] = (number/100)%10;
        numbers[2] = (number/10)%10;
        numbers[3] = number%10;

        return numbers;
        //numbers = [1,9,8,2]
    }
}

