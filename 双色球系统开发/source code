包装车；

导入java.util.Random；
导入java.util.Scanner；

//<双色球系统开发>
公开课测试8 {
公共静态void main（String[]args） {
int[] userNumbers = userSelectNumbers();
 PrintArray（userNumbers）；

int[] luckNumber = createLuckNumbers();
 PrintArray（luckNumber）；

judge（userNumbers，luckNumber）；
 }


 // one . Design a method for users to bet a group of numbers and return (before six One is the red ball number, and the last one is the blue ball number)
public static int[]userSelectNumbers（） {
 // two Create an integer array to store the seven Numbers (front six One is the red ball number, and the last one is the blue ball number)
int[] numbers = new int[ seven ];
//numbers = [ zero , zero , zero , zero , zero , zero , zero ]
 // zero one two three four five six
Scanner sc = new Scanner(System.in);

 // three . Before traversal six Locations for users to place bets in turn six Red ball numbers, saved
for (int i = zero; i < numbers.length - one; i） {
//i = zero one two three four five

while（真） {
 // four Start asking users to bet a red ball number for the current location（ one - thirty-three (cannot be repeated)
系统输出打印( &#34;Please enter No.&#34;（i） one ) &#34;Red ball numbers: (1-33)&#34; );
int number = sc.nextInt();

 // five . First judge whether the red ball number entered by the user is in the one - thirty-three between
if (number < one||数字&#62; thirty-three ) {
系统输出打印( &#34;Wrong number, please re-enter&#34; );
 }
其他的 {
 //Number in one - thirty-three And then judge whether the number is repeated
if（存在（数字，数字）） {
 //Number The current number is repeated
系统输出打印( &#34;The number is duplicate, please re-enter&#34; );
 }
其他的 {
 //Number is not repeated and can be used
numbers[i] = number;
 break;// End the current bet and end the endless cycle
 }
 }
 }
 }

 // six Bet the last basketball number
while（真） {
系统输出打印( &#34;Please enter the basketball number: (between 1-16)&#34; );
int number = sc.nextInt();

if (number < one||数字&#62; sixteen ) {
系统输出打印( &#34;Wrong number, please re-enter&#34; );
            }
            else {
                numbers[6] = number;
                break;
            }
        }
        return numbers;
    }

    public static boolean exist(int[] numbers,int number) {
        //判断数字number是否在数组numbers中已经存在
        for (int i = 0; i < numbers.length; i++) {
            if (number == numbers[i]){
                return true;
            }
        }
        return false;
    }

    public static void PrintArray(int[] arr){
        //打印数组
        System.out.print("[");
        for (int i = 0; i < arr.length; i++) {
            System.out.print(i == arr.length - 1 ? arr[i] : arr[i] + "," );
        }
        System.out.println("]");
    }


    //2.设计一个方法:随机一组中奖号码出来(6个红球号码,1个蓝球号码)
    public static int[] createLuckNumbers(){
        //1.创建一个整型数组,用于存储7个号码
        int[] numbers = new int[7];

        Random r = new Random();

        //2.遍历前6个位置处,依次随机一个红球号码存入(1-33 不重复)
        for (int i = 0; i < numbers.length; i++) {
            // i = 0 1 2 3 4 5

            while (true) {
                //3.为当前这个位置随机一个红球号码出来存入 1-33 ==>-1 ==>(0-32)+1
                int number = r.nextInt(32)+1;

                //4.判断这个号码是否之前出现过(红球号码不能重复)
                if (!exist(numbers,number)){
                    //number不重复
                    numbers[i] = number;
                    break;//结束死循环,代表找到了当前这个位置的一个不重复的红球号码
                }
            }
        }

        //3.录入一个蓝球号码
        numbers[6] = r.nextInt(16)+1;
        return numbers;

    }


    //3.设计一个方法:判断用户中奖情况
    public static void judge(int[] userNumbers,int[] luckNumbers){
        //userNumbers = [12,14,16,18,23,26,8]
        //luckNumbers = [16,17,18,19,26,32,8]

        //2.分别定义2个变量用于记住红球命中了几个以及篮球命中了几个
        int redCount = 0;
        int blueCount;

        // 先判断红球命中的数量
        // 遍历用户投注的号码的前6个红球
        for (int i = 0; i < userNumbers.length - 1; i++) {
            //userNumbers[i]
            //开始遍历中奖号码的前6个红球号码,看用户当前选择的这个号码是否命中
            for (int j = 0; j < luckNumbers.length - 1; j++) {
                if (userNumbers[i] == luckNumbers[j]){
                    redCount++;
                    break;
                }
            }
        }

        //3.判断蓝球是否中奖
        blueCount = userNumbers[6] == luckNumbers[6] ? 1 : 0;

        System.out.println("恭喜中"+redCount+"个红球");
        System.out.println("恭喜中"+blueCount+"个蓝球");

        //4.判断中奖详情,并输出结果
        if (redCount == 6 && blueCount == 1){
            System.out.println("恭喜您,中奖1000万元!");
        } else if (redCount == 6 && blueCount == 0){
            System.out.println("恭喜您,中奖500万元！");
        } else if (redCount == 5 && blueCount == 1) {
            System.out.println("恭喜您,中奖3000元！");
        } else if (redCount == 5 && blueCount == 0 || redCount == 4 && blueCount ==1) {
            System.out.println("恭喜您,中奖200元！");
        } else if (redCount == 4 && blueCount == 0 || redCount == 3 && blueCount == 1 || redCount == 2 && blueCount == 1) {
            System.out.println("恭喜您,中奖10元！");
        } else if (redCount == 1 && blueCount == 1 || redCount == 0 && blueCount == 1) {
            System.out.println("恭喜您,中奖5元！");
        }else {
            System.out.println("感谢您为福彩事业做出的贡献。");
        }
    }
}


